apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: geode-websession
spec:
  serviceName: geode-websession
  replicas: 2
  selector:
    matchLabels:
      app: geode-websession
  template:
    metadata:
      labels:
        role: locator
        app: geode-websession
    spec:
      containers:
        - name: geode-websession
          image: ojhughes/geode-websession
#          image: harbor-repo.vmware.com/dockerhub-proxy-cache/ojhughes/geode-websession
          resources:
            requests:
              memory: "1Gi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1"
          livenessProbe:
            failureThreshold: 50
            httpGet:
              port: 8080
              path: actuator/health/liveness
              scheme: HTTP

          readinessProbe:
            failureThreshold: 50
            httpGet:
              port: 8080
              path: actuator/health/readiness
              scheme: HTTP
          env:
            - name: management.endpoint.gateway.enabled
              value: "true"
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      serviceAccountName: geode-svc-acc
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: geode-svc-acc
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: geode-role
rules:
  - apiGroups:
      - "" # "" indicates the core API group
    resources:
      - pods
    verbs:
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: geode-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: geode-role
subjects:
  - kind: ServiceAccount
    name: geode-svc-acc